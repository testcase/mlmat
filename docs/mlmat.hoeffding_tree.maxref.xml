<?xml version='1.0' encoding='utf-8' standalone='yes'?>


<!-- DO NOT EDIT THIS FILE ... YOU WILL LOSE YOUR WORK -->


<c74object name='mlmat.hoeffding_tree' category='ML'>

	<digest>Hoeffding Decision Tree</digest>
	<description>Hoeffding Decision Tree. An implementation of Hoeffding trees, a form of streaming decision tree for classification. Given labeled data, a Hoeffding tree can be trained and saved for later use, or a pre-trained Hoeffding tree can be used for predicting the classifications of new points. The Hoeffding tree is well suited for incremental learning meaning that rather than provide all the data at once it will refine the decision tree as it receives more data. </description>


	<!--METADATA-->

	<metadatalist>
		<metadata name='author'>Todd Ingalls </metadata>
		<metadata name='tag'>ML</metadata>
	</metadatalist>


	<!--ARGUMENTS-->

	<objarglist>

	</objarglist>


	<!--MESSAGES-->

	<methodlist>

		<method name='clear'>
			<digest>clear model</digest>
			<description>clear model. </description>
		</method>

		<method name='read'>
			<digest></digest>
			<description></description>
		</method>

		<method name='train'>
			<digest>Train model</digest>
			<description>Train model. </description>
		</method>

		<method name='write'>
			<digest></digest>
			<description></description>
		</method>

	</methodlist>


	<!--ATTRIBUTES-->

	<attributelist>

        <attribute name='reset_tree' get='1' set='1' type='long' size='1'>
			<digest>If true, reset the tree to an empty tree before training</digest>
            <description>If true, reset the tree to an empty tree before training.  (default = 0)           </description>
		</attribute>

        <attribute name='observations_before_binning' get='1' set='1' type='long' size='1'>
			<digest>If the 'domingos' split strategy is used, this specifies the number of samples observed before binning is performed</digest>
            <description>If the 'domingos' split strategy is used, this specifies the number of samples observed before binning is performed.  (default = 100)           </description>
		</attribute>

        <attribute name='bins' get='1' set='1' type='long' size='1'>
			<digest>If the 'domingos' split strategy is used, this specifies the number of bins for each numeric split</digest>
            <description>If the 'domingos' split strategy is used, this specifies the number of bins for each numeric split.  (default = 10)           </description>
		</attribute>

        <attribute name='passes' get='1' set='1' type='long' size='1'>
			<digest>Number of passes to take over the dataset</digest>
            <description>Number of passes to take over the dataset.  (default = 1)           </description>
		</attribute>

        <attribute name='split_strategy' get='1' set='1' type='symbol' size='1'>
			<digest>The splitting strategy to use for numeric features</digest>
            <description>The splitting strategy to use for numeric features.  (default = binary)           </description>
           <attributelist>
               <attribute name='enumvals' get='1' set='1' type='atom' size='2'>
                   <enumlist>
                       <enum name="domingos">
                       </enum>
                       <enum name="binary">
                       </enum>
                   </enumlist>
               </attribute>
               <attribute name='label' get='1' set='1' type='symbol' size='1' value='split_strategy' />
               <attribute name='style' get='1' set='1' type='symbol' size='1' value='enum' />
           </attributelist>

		</attribute>

        <attribute name='min_samples' get='1' set='1' type='long' size='1'>
			<digest>Minimum number of samples before splitting</digest>
            <description>Minimum number of samples before splitting.  (default = 20)           </description>
		</attribute>

        <attribute name='confidence' get='1' set='1' type='float64' size='1'>
			<digest>Confidence before splitting (between 0 and 1)</digest>
            <description>Confidence before splitting (between 0 and 1).  (default = 0.95)           </description>
		</attribute>

        <attribute name='autoscale' get='1' set='1' type='long' size='1'>
			<digest>Automatically scale data based on scaling_type</digest>
            <description>Automatically scale data based on scaling_type.  (default = 0)           </description>
		</attribute>

        <attribute name='batch_mode' get='1' set='1' type='long' size='1'>
			<digest>The training may be performed in batch mode (like a typical decision tree algorithm) by specifying the option, but this may not be the best option for large datasets</digest>
            <description>The training may be performed in batch mode (like a typical decision tree algorithm) by specifying the option, but this may not be the best option for large datasets.  (default = 0)           </description>
		</attribute>

        <attribute name='file' get='1' set='1' type='symbol' size='1'>
			<digest>File </digest>
            <description>File            </description>
		</attribute>

        <attribute name='scaler_epsilon' get='1' set='1' type='float64' size='1'>
			<digest>Epsilon value</digest>
            <description>Epsilon value. Epsilon value.  (default = 0.00005)           </description>
		</attribute>

        <attribute name='scaler_max' get='1' set='1' type='long' size='1'>
			<digest>Maximum value</digest>
            <description>Maximum value. Maximum value.  (default = 1)           </description>
		</attribute>

        <attribute name='scaler' get='1' set='1' type='symbol' size='1'>
			<digest>The scaler type</digest>
            <description>The scaler type.  (default = normalization)           </description>
           <attributelist>
               <attribute name='enumvals' get='1' set='1' type='atom' size='6'>
                   <enumlist>
                       <enum name="standard">
                       </enum>
                       <enum name="min_max">
                       </enum>
                       <enum name="normalization">
                       </enum>
                       <enum name="abs">
                       </enum>
                       <enum name="pca_whitening">
                       </enum>
                       <enum name="zca_whitening">
                       </enum>
                   </enumlist>
               </attribute>
               <attribute name='label' get='1' set='1' type='symbol' size='1' value='scaler' />
               <attribute name='style' get='1' set='1' type='symbol' size='1' value='enum' />
           </attributelist>

		</attribute>

        <attribute name='scaler_min' get='1' set='1' type='long' size='1'>
			<digest>Minimum value</digest>
            <description>Minimum value. Minimum value.  (default = 0)           </description>
		</attribute>

        <attribute name='check_interval' get='1' set='1' type='long' size='1'>
			<digest>Number of samples required before each split check</digest>
            <description>Number of samples required before each split check.  (default = 20)           </description>
		</attribute>

        <attribute name='info_gain' get='1' set='1' type='long' size='1'>
			<digest>If set, information gain is used instead of Gini impurity for calculating Hoeffding bounds</digest>
            <description>If set, information gain is used instead of Gini impurity for calculating Hoeffding bounds.  (default = 0)           </description>
		</attribute>

        <attribute name='max_samples' get='1' set='1' type='long' size='1'>
			<digest>Maximum number of samples before splitting</digest>
            <description>Maximum number of samples before splitting.  (default = 5000)           </description>
		</attribute>

        <attribute name='mode' get='1' set='1' type='long' size='1'>
			<digest>Input mode for matrices</digest>
            <description>Input mode for matrices.  (default = 0)           </description>
		</attribute>

	</attributelist>


	<!--RELATED-->

	<seealsolist>
		<seealso name='mlmat.id3_tree' />
	</seealsolist>


    <!--DISCUSSION-->

    <discussion>The Hoeffding tree is well suited for incremental learning meaning that rather than provide all the data at once it will refine the decision tree as it receives more data. However, it can be used as a traditional decision tree if the <at>batch_mode</at> attribute is set to 1.</discussion>
</c74object>

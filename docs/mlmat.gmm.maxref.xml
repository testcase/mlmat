<?xml version='1.0' encoding='utf-8' standalone='yes'?>


<!-- DO NOT EDIT THIS FILE ... YOU WILL LOSE YOUR WORK -->


<c74object name='mlmat.gmm' category='ML'>

	<digest>A Gaussian Mixture Model</digest>
	<description>A Gaussian Mixture Model. A Gaussian Mixture Model takes a parametric estimate of a Gaussian mixture model (GMM) using the EM algorithm to find the maximum likelihood estimate. </description>


	<!--METADATA-->

	<metadatalist>
		<metadata name='author'>Todd Ingalls </metadata>
		<metadata name='tag'>ML</metadata>
	</metadatalist>


	<!--ARGUMENTS-->

	<objarglist>

	</objarglist>


	<!--MESSAGES-->

	<methodlist>

		<method name='component'>
			<digest>Generate points using specified component of the GMM</digest>
			<description>Generate points using specified component of the GMM. </description>
		</method>

		<method name='train'>
			<digest>Train model</digest>
			<description>Train model. </description>
		</method>

		<method name='weights'>
			<digest>weights for gaussians </digest>
			<description>weights for gaussians </description>
		</method>

		<method name='generate'>
			<digest>Generate points based on distribution</digest>
			<description>Generate points based on distribution. </description>
		</method>

		<method name='weighted_generate'>
			<digest>Generate points based on distribution and weighted by <at>weights</at></digest>
			<description>Generate points based on distribution and weighted by <at>weights</at>. </description>
		</method>

		<method name='clear'>
			<digest>clear data and model </digest>
			<description>clear data and model </description>
		</method>

		<method name='read'>
			<digest></digest>
			<description></description>
		</method>

		<method name='write'>
			<digest></digest>
			<description></description>
		</method>

	</methodlist>


	<!--ATTRIBUTES-->

	<attributelist>

        <attribute name='samplings' get='1' set='1' type='long' size='1'>
			<digest>If using refined_start, specify the number of samplings used for initial points</digest>
            <description>If using refined_start, specify the number of samplings used for initial points.  (default = 100)           </description>
		</attribute>

        <attribute name='no_force_positive' get='1' set='1' type='long' size='1'>
			<digest>Do not force the covariance matrices to be positive definite</digest>
            <description>Do not force the covariance matrices to be positive definite. Recommend leaving this as false.  (default = 0)           </description>
		</attribute>

        <attribute name='refined_start' get='1' set='1' type='long' size='1'>
			<digest>During the initialization, use refined initial positions for k-means clustering</digest>
            <description>During the initialization, use refined initial positions for k-means clustering.  (default = 0)           </description>
		</attribute>

        <attribute name='tolerance' get='1' set='1' type='float64' size='1'>
			<digest>Tolerance for convergence of EM</digest>
            <description>Tolerance for convergence of EM.  (default = 0.00001)           </description>
		</attribute>

        <attribute name='diagonal_covariance' get='1' set='1' type='long' size='1'>
			<digest>Force the covariance of the Gaussians to be diagonal</digest>
            <description>Force the covariance of the Gaussians to be diagonal.  This can accelerate training time significantly.  (default = 1)           </description>
		</attribute>

        <attribute name='trials' get='1' set='1' type='long' size='1'>
			<digest>Number of trials to perform in training GMM</digest>
            <description>Number of trials to perform in training GMM.  (default = 1)           </description>
		</attribute>

        <attribute name='gaussians' get='1' set='1' type='long' size='1'>
			<digest>Number of Gaussians in the GMM</digest>
            <description>Number of Gaussians in the GMM.  (default = 10)           </description>
		</attribute>

        <attribute name='autoscale' get='1' set='1' type='long' size='1'>
			<digest>Automatically scale data based on scaling_type</digest>
            <description>Automatically scale data based on scaling_type.  (default = 0)           </description>
		</attribute>

        <attribute name='file' get='1' set='1' type='symbol' size='1'>
			<digest>File </digest>
            <description>File            </description>
		</attribute>

        <attribute name='scaler_epsilon' get='1' set='1' type='float64' size='1'>
			<digest>Epsilon value</digest>
            <description>Epsilon value. Epsilon value.  (default = 0.00005)           </description>
		</attribute>

        <attribute name='classify' get='1' set='1' type='long' size='1'>
			<digest>Classify the given observations as being from an individual component in this GMM</digest>
            <description>Classify the given observations as being from an individual component in this GMM. This will output a matrix out fourth outlet  (default = 0)           </description>
		</attribute>

        <attribute name='seed' get='1' set='1' type='long' size='1'>
			<digest>Random seed</digest>
            <description>Random seed.  (default = 0)           </description>
		</attribute>

        <attribute name='scaler_max' get='1' set='1' type='long' size='1'>
			<digest>Maximum value</digest>
            <description>Maximum value. Maximum value.  (default = 1)           </description>
		</attribute>

        <attribute name='percentage' get='1' set='1' type='float64' size='1'>
			<digest>If using refined_start, specify the percentage of the dataset used for each sampling</digest>
            <description>If using refined_start, specify the percentage of the dataset used for each sampling.  (default = 0.02)           </description>
		</attribute>

        <attribute name='noise' get='1' set='1' type='float64' size='1'>
			<digest>Variance of zero-mean Gaussian noise to add to data</digest>
            <description>Variance of zero-mean Gaussian noise to add to data.  (default = 0.)           </description>
		</attribute>

        <attribute name='scaler' get='1' set='1' type='symbol' size='1'>
			<digest>The scaler type</digest>
            <description>The scaler type.  (default = normalization)           </description>
           <attributelist>
               <attribute name='enumvals' get='1' set='1' type='atom' size='6'>
                   <enumlist>
                       <enum name="standard">
                       </enum>
                       <enum name="min_max">
                       </enum>
                       <enum name="normalization">
                       </enum>
                       <enum name="abs">
                       </enum>
                       <enum name="pca_whitening">
                       </enum>
                       <enum name="zca_whitening">
                       </enum>
                   </enumlist>
               </attribute>
               <attribute name='label' get='1' set='1' type='symbol' size='1' value='scaler' />
               <attribute name='style' get='1' set='1' type='symbol' size='1' value='enum' />
           </attributelist>

		</attribute>

        <attribute name='autoclear' get='1' set='1' type='long' size='1'>
			<digest>Clear training data from memory after the model has been trained</digest>
            <description>Clear training data from memory after the model has been trained.  (default = 0)           </description>
		</attribute>

        <attribute name='max_iterations' get='1' set='1' type='long' size='1'>
			<digest>Maximum number of iterations of EM algorithm (passing 0 will run until convergence)</digest>
            <description>Maximum number of iterations of EM algorithm (passing 0 will run until convergence).  (default = 250)           </description>
		</attribute>

        <attribute name='kmeans_max_iterations' get='1' set='1' type='long' size='1'>
			<digest>Maximum number of iterations for the k-means algorithm (used to initialize EM)</digest>
            <description>Maximum number of iterations for the k-means algorithm (used to initialize EM).  (default = 1000)           </description>
		</attribute>

        <attribute name='scaler_min' get='1' set='1' type='long' size='1'>
			<digest>Minimum value</digest>
            <description>Minimum value. Minimum value.  (default = 0)           </description>
		</attribute>

        <attribute name='mode' get='1' set='1' type='long' size='1'>
			<digest>Input mode for matrices</digest>
            <description>Input mode for matrices.  (default = 0)           </description>
		</attribute>

	</attributelist>


	<!--RELATED-->

	<seealsolist>
		<seealso name='mlmat.knn' />
		<seealso name='mlmat.hmm' />
		<seealso name='mlmat.linear_svm' />
	</seealsolist>


    <!--DISCUSSION-->

    <discussion>In addition to being able to determine the probability that input comes from the learned distribution, this object has a number of features for generating data based ont the learned model. The <at>generate</at> message can be used to create N number of randomly generated observations based on the model. The <at>component</at> message can be used to generate N observations from a single component of the model. The <at>weights</at> message can be used to alter the relative weights of the components when generating random observations using the <at>weighted_generate</at> message.</discussion>
</c74object>

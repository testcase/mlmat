<?xml version='1.0' encoding='utf-8' standalone='yes'?>


<!-- DO NOT EDIT THIS FILE ... YOU WILL LOSE YOUR WORK -->


<c74object name='mlmat.kfn' category='ML'>

	<digest>K-farthest neighbor search</digest>
	<description>K-farthest neighbor search. An implementation of k-farthest-neighbor search using single-tree and dual-tree algorithms. Given a set of reference points and query points, this can find the k furthest neighbors in the reference set of each query point using trees; trees that are built can be saved for future use. </description>


	<!--METADATA-->

	<metadatalist>
		<metadata name='author'>Todd Ingalls </metadata>
		<metadata name='tag'>ML</metadata>
	</metadatalist>


	<!--ARGUMENTS-->

	<objarglist>

	</objarglist>


	<!--MESSAGES-->

	<methodlist>

		<method name='clear'>
			<digest>clear model</digest>
			<description>clear model. </description>
		</method>

		<method name='read'>
			<digest></digest>
			<description></description>
		</method>

		<method name='write'>
			<digest></digest>
			<description></description>
		</method>

	</methodlist>


	<!--ATTRIBUTES-->

	<attributelist>

        <attribute name='random_basis' get='1' set='1' type='long' size='1'>
			<digest>Before tree-building, project the data onto a random orthogonal basis</digest>
            <description>Before tree-building, project the data onto a random orthogonal basis.  (default = 0)           </description>
		</attribute>

        <attribute name='leaf_size' get='1' set='1' type='long' size='1'>
			<digest>Leaf size for tree building (used for kd-trees, vp trees, random projection trees, UB trees, R trees, R* trees, X trees, Hilbert R trees, R+ trees, R++ trees, spill trees, and octrees)</digest>
            <description>Leaf size for tree building (used for kd-trees, vp trees, random projection trees, UB trees, R trees, R* trees, X trees, Hilbert R trees, R+ trees, R++ trees, spill trees, and octrees).  (default = 20)           </description>
		</attribute>

        <attribute name='autoscale' get='1' set='1' type='long' size='1'>
			<digest>Automatically scale data based on scaling_type</digest>
            <description>Automatically scale data based on scaling_type.  (default = 0)           </description>
		</attribute>

        <attribute name='file' get='1' set='1' type='symbol' size='1'>
			<digest>File </digest>
            <description>File            </description>
		</attribute>

        <attribute name='scaler_epsilon' get='1' set='1' type='float64' size='1'>
			<digest>Epsilon value</digest>
            <description>Epsilon value. Epsilon value.  (default = 0.00005)           </description>
		</attribute>

        <attribute name='seed' get='1' set='1' type='long' size='1'>
			<digest>Random seed if random basis being used</digest>
            <description>Random seed if random basis being used. 0 indicates no seed.  (default = 0)           </description>
		</attribute>

        <attribute name='scaler_max' get='1' set='1' type='long' size='1'>
			<digest>Maximum value</digest>
            <description>Maximum value. Maximum value.  (default = 1)           </description>
		</attribute>

        <attribute name='percentage' get='1' set='1' type='float64' size='1'>
			<digest>Resultant neighbors will be at least (p*100) % of the distance as the true furthest neighbor Range 0 to 1</digest>
            <description>Resultant neighbors will be at least (p*100) % of the distance as the true furthest neighbor Range 0 to 1.  (default = 1.)           </description>
		</attribute>

        <attribute name='scaler' get='1' set='1' type='symbol' size='1'>
			<digest>The scaler type</digest>
            <description>The scaler type.  (default = normalization)           </description>
           <attributelist>
               <attribute name='enumvals' get='1' set='1' type='atom' size='6'>
                   <enumlist>
                       <enum name="standard">
                       </enum>
                       <enum name="min_max">
                       </enum>
                       <enum name="normalization">
                       </enum>
                       <enum name="abs">
                       </enum>
                       <enum name="pca_whitening">
                       </enum>
                       <enum name="zca_whitening">
                       </enum>
                   </enumlist>
               </attribute>
               <attribute name='label' get='1' set='1' type='symbol' size='1' value='scaler' />
               <attribute name='style' get='1' set='1' type='symbol' size='1' value='enum' />
           </attributelist>

		</attribute>

        <attribute name='algorithm' get='1' set='1' type='symbol' size='1'>
			<digest>Type of neighbor search </digest>
            <description>Type of neighbor search  (default = dual_tree)           </description>
           <attributelist>
               <attribute name='enumvals' get='1' set='1' type='atom' size='4'>
                   <enumlist>
                       <enum name="naive">
                       </enum>
                       <enum name="single_tree">
                       </enum>
                       <enum name="dual_tree">
                       </enum>
                       <enum name="greedy">
                       </enum>
                   </enumlist>
               </attribute>
               <attribute name='label' get='1' set='1' type='symbol' size='1' value='algorithm' />
               <attribute name='style' get='1' set='1' type='symbol' size='1' value='enum' />
           </attributelist>

		</attribute>

        <attribute name='scaler_min' get='1' set='1' type='long' size='1'>
			<digest>Minimum value</digest>
            <description>Minimum value. Minimum value.  (default = 0)           </description>
		</attribute>

        <attribute name='tree_type' get='1' set='1' type='symbol' size='1'>
			<digest>Type of tree to use </digest>
            <description>Type of tree to use  (default = kd)           </description>
           <attributelist>
               <attribute name='enumvals' get='1' set='1' type='atom' size='15'>
                   <enumlist>
                       <enum name="kd">
                       </enum>
                       <enum name="vp">
                       </enum>
                       <enum name="rp">
                       </enum>
                       <enum name="max-rp">
                       </enum>
                       <enum name="ub">
                       </enum>
                       <enum name="cover">
                       </enum>
                       <enum name="r">
                       </enum>
                       <enum name="r-star">
                       </enum>
                       <enum name="x">
                       </enum>
                       <enum name="ball">
                       </enum>
                       <enum name="hilbert-r">
                       </enum>
                       <enum name="r-plus">
                       </enum>
                       <enum name="r-plus-plus">
                       </enum>
                       <enum name="spill">
                       </enum>
                       <enum name="oct">
                       </enum>
                   </enumlist>
               </attribute>
               <attribute name='label' get='1' set='1' type='symbol' size='1' value='tree_type' />
               <attribute name='style' get='1' set='1' type='symbol' size='1' value='enum' />
           </attributelist>

		</attribute>

        <attribute name='epsilon' get='1' set='1' type='float64' size='1'>
			<digest>If specified, will search with given relative error</digest>
            <description>If specified, will search with given relative error.  (default = 0.)           </description>
		</attribute>

        <attribute name='neighbors' get='1' set='1' type='long' size='1'>
			<digest>Number of neighbors to query</digest>
            <description>Number of neighbors to query.  (default = 1)           </description>
		</attribute>

        <attribute name='mode' get='1' set='1' type='long' size='1'>
			<digest>Input mode for matrices</digest>
            <description>Input mode for matrices.  (default = 0)           </description>
		</attribute>

	</attributelist>


	<!--RELATED-->

	<seealsolist>
		<seealso name='mlmat.knn' />
	</seealsolist>


    <!--DISCUSSION-->

</c74object>

<?xml version='1.0' encoding='utf-8' standalone='yes'?>


<!-- DO NOT EDIT THIS FILE ... YOU WILL LOSE YOUR WORK -->


<c74object name='mlmat.linear_svm' category='ML'>

	<digest>Linear SVM</digest>
	<description>Linear SVM. An implementation of linear SVM for multiclass classification. Given labeled data, a model can be trained and saved for future use; or, a pre-trained model can be used to classify new points. </description>


	<!--METADATA-->

	<metadatalist>
		<metadata name='author'>Todd Ingalls </metadata>
		<metadata name='tag'>ML</metadata>
	</metadatalist>


	<!--ARGUMENTS-->

	<objarglist>

	</objarglist>


	<!--MESSAGES-->

	<methodlist>

		<method name='clear'>
			<digest>clear model</digest>
			<description>clear model. </description>
		</method>

		<method name='read'>
			<digest></digest>
			<description></description>
		</method>

		<method name='train'>
			<digest>Train model </digest>
			<description>Train model </description>
		</method>

		<method name='write'>
			<digest></digest>
			<description></description>
		</method>

	</methodlist>


	<!--ATTRIBUTES-->

	<attributelist>

        <attribute name='shuffle' get='1' set='1' type='long' size='1'>
			<digest>Shuffle the order in which data points are visited for parallel SGD</digest>
            <description>Shuffle the order in which data points are visited for parallel SGD.  (default = 0)           </description>
		</attribute>

        <attribute name='step_size' get='1' set='1' type='float64' size='1'>
			<digest>Step size for parallel SGD optimizer</digest>
            <description>Step size for parallel SGD optimizer.  (default = 0.01)           </description>
		</attribute>

        <attribute name='tolerance' get='1' set='1' type='float64' size='1'>
			<digest>Convergence tolerance for optimizer</digest>
            <description>Convergence tolerance for optimizer.  (default = 0.)           </description>
		</attribute>

        <attribute name='optimizer' get='1' set='1' type='symbol' size='1'>
			<digest>Optimizer to use for training</digest>
            <description>Optimizer to use for training.  (default = lbfgs)           </description>
           <attributelist>
               <attribute name='enumvals' get='1' set='1' type='atom' size='2'>
                   <enumlist>
                       <enum name="lbfgs">
                       </enum>
                       <enum name="psgd">
                       </enum>
                   </enumlist>
               </attribute>
               <attribute name='label' get='1' set='1' type='symbol' size='1' value='optimizer' />
               <attribute name='style' get='1' set='1' type='symbol' size='1' value='enum' />
           </attributelist>

		</attribute>

        <attribute name='lambda' get='1' set='1' type='float64' size='1'>
			<digest>L2-regularization parameter for training</digest>
            <description>L2-regularization parameter for training.  (default = 0.0001)           </description>
		</attribute>

        <attribute name='max_iterations' get='1' set='1' type='long' size='1'>
			<digest>Maximum iterations for optimizer (0 indicates no limit)</digest>
            <description>Maximum iterations for optimizer (0 indicates no limit).  (default = 10000)           </description>
		</attribute>

        <attribute name='scaler_min' get='1' set='1' type='long' size='1'>
			<digest>Minimum value</digest>
            <description>Minimum value. Minimum value.  (default = 0)           </description>
		</attribute>

        <attribute name='num_classes' get='1' set='1' type='long' size='1'>
			<digest>Margin of difference between correct class and other classes</digest>
            <description>Margin of difference between correct class and other classes.  (default = 0)           </description>
		</attribute>

        <attribute name='epochs' get='1' set='1' type='long' size='1'>
			<digest>Maximum number of full epochs over dataset for psgd</digest>
            <description>Maximum number of full epochs over dataset for psgd.  (default = 50)           </description>
		</attribute>

        <attribute name='autoscale' get='1' set='1' type='long' size='1'>
			<digest>Automatically scale data based on scaling_type</digest>
            <description>Automatically scale data based on scaling_type.  (default = 0)           </description>
		</attribute>

        <attribute name='file' get='1' set='1' type='symbol' size='1'>
			<digest>File </digest>
            <description>File            </description>
		</attribute>

        <attribute name='scaler_epsilon' get='1' set='1' type='float64' size='1'>
			<digest>Epsilon value</digest>
            <description>Epsilon value. Epsilon value.  (default = 0.00005)           </description>
		</attribute>

        <attribute name='delta' get='1' set='1' type='float64' size='1'>
			<digest>Margin of difference between correct class and other classes</digest>
            <description>Margin of difference between correct class and other classes.  (default = 1.)           </description>
		</attribute>

        <attribute name='seed' get='1' set='1' type='long' size='1'>
			<digest>Random seed if random basis being used</digest>
            <description>Random seed if random basis being used. 0 indicates no seed.  (default = 0)           </description>
		</attribute>

        <attribute name='scaler_max' get='1' set='1' type='long' size='1'>
			<digest>Maximum value</digest>
            <description>Maximum value. Maximum value.  (default = 1)           </description>
		</attribute>

        <attribute name='scaler' get='1' set='1' type='symbol' size='1'>
			<digest>The scaler type</digest>
            <description>The scaler type.  (default = normalization)           </description>
           <attributelist>
               <attribute name='enumvals' get='1' set='1' type='atom' size='6'>
                   <enumlist>
                       <enum name="standard">
                       </enum>
                       <enum name="min_max">
                       </enum>
                       <enum name="normalization">
                       </enum>
                       <enum name="abs">
                       </enum>
                       <enum name="pca_whitening">
                       </enum>
                       <enum name="zca_whitening">
                       </enum>
                   </enumlist>
               </attribute>
               <attribute name='label' get='1' set='1' type='symbol' size='1' value='scaler' />
               <attribute name='style' get='1' set='1' type='symbol' size='1' value='enum' />
           </attributelist>

		</attribute>

        <attribute name='no_intercept' get='1' set='1' type='long' size='1'>
			<digest>Do not add the intercept term to the model</digest>
            <description>Do not add the intercept term to the model.  (default = 0)           </description>
		</attribute>

        <attribute name='mode' get='1' set='1' type='long' size='1'>
			<digest>Input mode for matrices</digest>
            <description>Input mode for matrices.  (default = 0)           </description>
		</attribute>

	</attributelist>


	<!--RELATED-->

	<seealsolist>
		<seealso name='mlmat.linear_regression' />
		<seealso name='mlmat.mlp_classifier' />
	</seealsolist>


    <!--DISCUSSION-->

</c74object>
